import json
from typing import List, Tuple
from dependency_graph_template import TEMPLATE
import pdb

NAMESPACE_SEPARATOR = "_"
EDGE_MARKER = "-_-_-_-_"
def visualize_dependencies(dependencies: List[Tuple[str, str]], filename: str):
    nodes = set()
    edges = set()

    for src, target in dependencies:
        src_id = src.replace(".", NAMESPACE_SEPARATOR)
        target_id = target.replace(".", NAMESPACE_SEPARATOR)
        nodes.add(src_id)
        nodes.add(target_id)
        edges.add(f"{src_id}{EDGE_MARKER}{target_id}"),

        parent_name = ""

        for atom in src.split("."):
            parent_name = parent_name + ("" if parent_name == "" else NAMESPACE_SEPARATOR)  + atom
            nodes.add(parent_name)

        parent_name = ""

        for atom in target.split("."):
            parent_name = parent_name + ("" if parent_name == "" else NAMESPACE_SEPARATOR)  + atom
            nodes.add(parent_name)

    elements = []

    for node in nodes:
        node_dict = {
            "data": {
                "id": node,
            },
            "group": "nodes",
            "removed": False,
            "selected": False,
            "selectable": True,
            "locked": False,
            "grabbable": True,
            "classes": "",
        }

        if NAMESPACE_SEPARATOR in node:
            node_dict["data"]["label"] = node[node.rfind(NAMESPACE_SEPARATOR)+1:]
            node_dict["data"]["parent"] = node[:node.rfind(NAMESPACE_SEPARATOR)]
        else:
            node_dict["data"]["label"] = node

        elements.append(node_dict)

    for edge in edges:
        src, target = edge.split(EDGE_MARKER)

        edge_dict = {
            "data": {
                "id": edge,
                "source": src,
                "target": target,
                "arrow": "triangle-backcurve",
            },
            "group": "edges",
            "removed": False,
            "selected": False,
            "selectable": True,
            "locked": False,
            "grabbable": True,
            "classes": "",
        }

        elements.append(edge_dict)

    graph = TEMPLATE.replace("_________ELEMENTS_GO_HERE_________", json.dumps(elements))

    with open(filename, "w") as f:
        f.write(graph)



if __name__ == "__main__":
    deps = [
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "collections"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "logging"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "io"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.hpc.sparse_data_dist"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.hpc.extend_distributed"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.hpc.feature_defs"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.hpc.interfaces.sharder_config.types"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.hpc.model_sharder_utils"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.backend.modules"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.interfaces.distributed_app_config.distributed_app_strategy.types"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.interfaces.model_config.optimizer_config.types"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.interfaces.proxy_module_config.embedding_bag_config.types"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.interfaces.proxy_module_config.grouped_embedding_bag_config.types"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.proxy_module_thrift"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.proxy_module_thrift.grouped_embedding_bag_proxy"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.sharding.feature_meta_extractor"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.common.sharding.sharding_utils"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "caffe2.torch.fb.training_toolkit.optimizers.full_sync_optimizer"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "torch.nn"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "torch.package"),
        ("caffe2.torch.fb.training_toolkit.backend.model_materializer_full_sync", "torch.autograd.profiler"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "logging"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "uuid"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "fbgemm_gpu.split_table_batched_embeddings_ops"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.hpc.quantized_comms_lib"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.hpc.sparse_data_dist"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.hpc.configs"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.hpc.feature_defs"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.hpc.model_sharder_utils"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.sparsenn.pooled_embeddings_modules"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.checkpoint.type_def"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.interfaces.any.types"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.interfaces.distributed_app_config.distributed_app_strategy.types"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.proxy_module_thrift"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.proxy_module_thrift.grouped_embedding_bag_proxy"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.proxy_module_thrift.proxy_module"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.common.serialization_thrift"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "torch.nn"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag", "torch.autograd.profiler"),
        ("caffe2.torch.fb.hpc.quantized_comms_lib", "logging"),
        ("caffe2.torch.fb.hpc.quantized_comms_lib", "typing"),
        ("caffe2.torch.fb.hpc.quantized_comms_lib", "torch"),
        ("caffe2.torch.fb.hpc.quantized_comms_lib", "caffe2.torch.fb.hpc.configs"),
        ("caffe2.torch.fb.hpc.configs", "dataclasses"),
        ("caffe2.torch.fb.hpc.configs", "enum"),
        ("caffe2.torch.fb.hpc.configs", "typing"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "typing"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "torch"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "torch.nn"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "caffe2.torch.fb.hpc.extend_distributed"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "caffe2.torch.fb.hpc.feature_defs"),
        ("caffe2.torch.fb.hpc.sparse_data_dist", "torch.autograd.profiler"),
        ("caffe2.torch.fb.hpc.extend_distributed", "abc"),
        ("caffe2.torch.fb.hpc.extend_distributed", "logging"),
        ("caffe2.torch.fb.hpc.extend_distributed", "os"),
        ("caffe2.torch.fb.hpc.extend_distributed", "datetime"),
        ("caffe2.torch.fb.hpc.extend_distributed", "typing"),
        ("caffe2.torch.fb.hpc.extend_distributed", "caffe2.torch.fb.distributed.utils.store_registry"),
        ("caffe2.torch.fb.hpc.extend_distributed", "torch"),
        ("caffe2.torch.fb.hpc.extend_distributed", "torch.distributed"),
        ("caffe2.torch.fb.hpc.extend_distributed", "torch.autograd"),
        ("caffe2.torch.fb.hpc.extend_distributed", "torch.autograd.profiler"),
        ("caffe2.torch.fb.hpc.extend_distributed", "torch.fb.common.utils"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "logging"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "os"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "datetime"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "typing"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "torch"),
        ("caffe2.torch.fb.distributed.utils.store_registry", "torch.distributed"),
        ("caffe2.torch.fb.hpc.feature_defs", "typing"),
        ("caffe2.torch.fb.hpc.feature_defs", "torch"),
        ("caffe2.torch.fb.hpc.feature_defs", "caffe2.torch.fb.hpc.utils"),
        ("caffe2.torch.fb.hpc.feature_defs", "torch.fb.model_transform.symbolic_tracing"),
        ("caffe2.torch.fb.hpc.utils", "typing"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "collections"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "heapq"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "logging"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "dataclasses"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "enum"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "functools"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "typing"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "caffe2.torch.fb.hpc.interfaces.sharder_config.types"),
        ("caffe2.torch.fb.hpc.model_sharder_utils", "caffe2.torch.fb.hpc.utils"),
        ("caffe2.torch.fb.sparsenn.pooled_embeddings_modules", "logging"),
        ("caffe2.torch.fb.sparsenn.pooled_embeddings_modules", "typing"),
        ("caffe2.torch.fb.sparsenn.pooled_embeddings_modules", "torch"),
        ("caffe2.torch.fb.sparsenn.pooled_embeddings_modules", "torch.nn"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "io"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "typing"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "torch"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "caffe2.torch.fb.hpc.model_packager"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "caffe2.torch.fb.hpc.modules"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "caffe2.torch.fb.training_toolkit.common.interfaces.common.pytorch_model.types"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "caffe2_fb.io_metadata.types"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "data_preproc.types.types"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "thrift.py3"),
        ("caffe2.torch.fb.training_toolkit.common.serialization_thrift", "thrift.py3.types"),
        ("caffe2.torch.fb.hpc.model_packager", "pathlib"),
        ("caffe2.torch.fb.hpc.model_packager", "typing"),
        ("caffe2.torch.fb.hpc.model_packager", "torch.package"),
        ("caffe2.torch.fb.hpc.model_packager", "caffe2.torch.fb.hpc.modules"),
        ("caffe2.torch.fb.hpc.model_packager", "caffe2.torch.fb.hpc.resources_impl"),
        ("caffe2.torch.fb.hpc.modules", "abc"),
        ("caffe2.torch.fb.hpc.modules", "dataclasses"),
        ("caffe2.torch.fb.hpc.modules", "pathlib"),
        ("caffe2.torch.fb.hpc.modules", "typing"),
        ("caffe2.torch.fb.hpc.modules", "torch"),
        ("caffe2.torch.fb.hpc.modules", "torch.package"),
        ("caffe2.torch.fb.hpc.modules", "aiplatform.modelstore.checkpointing.pyper.shard_info"),
        ("caffe2.torch.fb.hpc.modules", "caffe2_fb.io_metadata.types"),
        ("aiplatform.modelstore.checkpointing.pyper.shard_info", "typing"),
        ("aiplatform.modelstore.checkpointing.pyper.shard_info", "caffe2.torch.fb.training_toolkit.common.interfaces.sharder.sharding_plan.types"),
        ("aiplatform.modelstore.checkpointing.pyper.shard_info", "torch"),
        ("aiplatform.modelstore.checkpointing.pyper.shard_info", "torch.distributed.rpc"),
        ("caffe2.torch.fb.hpc.resources_impl", "io"),
        ("caffe2.torch.fb.hpc.resources_impl", "typing"),
        ("caffe2.torch.fb.hpc.resources_impl", "omegaconf"),
        ("caffe2.torch.fb.hpc.resources_impl", "torch"),
        ("caffe2.torch.fb.hpc.resources_impl", "torch.package"),
        ("caffe2.torch.fb.hpc.resources_impl", "caffe2.torch.fb.hpc.config_utils"),
        ("caffe2.torch.fb.hpc.resources_impl", "caffe2.torch.fb.hpc.modules"),
        ("caffe2.torch.fb.hpc.resources_impl", "hpc.metadata.types"),
        ("caffe2.torch.fb.hpc.resources_impl", "thrift.py3"),
        ("omegaconf", "omegaconf.base"),
        ("omegaconf", "omegaconf.dictconfig"),
        ("omegaconf", "omegaconf.errors"),
        ("omegaconf", "omegaconf.listconfig"),
        ("omegaconf", "omegaconf.nodes"),
        ("omegaconf", "omegaconf.omegaconf"),
        ("omegaconf", "omegaconf.version"),
        ("omegaconf.base", "abc"),
        ("omegaconf.base", "collections"),
        ("omegaconf.base", "dataclasses"),
        ("omegaconf.base", "enum"),
        ("omegaconf.base", "typing"),
        ("omegaconf.base", "omegaconf._utils"),
        ("omegaconf.base", "omegaconf.errors"),
        ("omegaconf.base", "omegaconf.nodes"),
        ("omegaconf.base", "omegaconf.omegaconf"),
        ("omegaconf.base", "omegaconf"),
        ("omegaconf.base", "omegaconf.dictconfig"),
        ("omegaconf.base", "omegaconf.listconfig"),
        ("omegaconf._utils", "copy"),
        ("omegaconf._utils", "os"),
        ("omegaconf._utils", "re"),
        ("omegaconf._utils", "string"),
        ("omegaconf._utils", "sys"),
        ("omegaconf._utils", "warnings"),
        ("omegaconf._utils", "enum"),
        ("omegaconf._utils", "textwrap"),
        ("omegaconf._utils", "typing"),
        ("omegaconf._utils", "yaml"),
        ("omegaconf._utils", "omegaconf.errors"),
        ("omegaconf._utils", "dataclasses"),
        ("omegaconf._utils", "attr"),
        ("omegaconf._utils", "importlib"),
        ("omegaconf._utils", "omegaconf.omegaconf"),
        ("omegaconf._utils", "omegaconf.base"),
        ("omegaconf._utils", "omegaconf.nodes"),
        ("omegaconf._utils", "omegaconf"),
        ("yaml", "yaml.error"),
        ("yaml", "yaml.tokens"),
        ("yaml", "yaml.events"),
        ("yaml", "yaml.nodes"),
        ("yaml", "yaml.loader"),
        ("yaml", "yaml.dumper"),
        ("yaml", "io"),
        ("yaml", "warnings"),
        ("yaml.loader", "yaml.reader"),
        ("yaml.loader", "yaml.scanner"),
        ("yaml.loader", "yaml.parser"),
        ("yaml.loader", "yaml.composer"),
        ("yaml.loader", "yaml.constructor"),
        ("yaml.loader", "yaml.resolver"),
        ("yaml.reader", "yaml.error"),
        ("yaml.reader", "codecs"),
        ("yaml.reader", "re"),
        ("yaml.scanner", "yaml.error"),
        ("yaml.scanner", "yaml.tokens"),
        ("yaml.parser", "yaml.error"),
        ("yaml.parser", "yaml.tokens"),
        ("yaml.parser", "yaml.events"),
        ("yaml.parser", "yaml.scanner"),
        ("yaml.composer", "yaml.error"),
        ("yaml.composer", "yaml.events"),
        ("yaml.composer", "yaml.nodes"),
        ("yaml.constructor", "yaml.error"),
        ("yaml.constructor", "yaml.nodes"),
        ("yaml.constructor", "collections.abc"),
        ("yaml.constructor", "datetime"),
        ("yaml.constructor", "base64"),
        ("yaml.constructor", "binascii"),
        ("yaml.constructor", "re"),
        ("yaml.constructor", "sys"),
        ("yaml.constructor", "types"),
        ("yaml.resolver", "yaml.error"),
        ("yaml.resolver", "yaml.nodes"),
        ("yaml.resolver", "re"),
        ("yaml.dumper", "yaml.emitter"),
        ("yaml.dumper", "yaml.serializer"),
        ("yaml.dumper", "yaml.representer"),
        ("yaml.dumper", "yaml.resolver"),
        ("yaml.emitter", "yaml.error"),
        ("yaml.emitter", "yaml.events"),
        ("yaml.serializer", "yaml.error"),
        ("yaml.serializer", "yaml.events"),
        ("yaml.serializer", "yaml.nodes"),
        ("yaml.representer", "yaml.error"),
        ("yaml.representer", "yaml.nodes"),
        ("yaml.representer", "datetime"),
        ("yaml.representer", "copyreg"),
        ("yaml.representer", "types"),
        ("yaml.representer", "base64"),
        ("yaml.representer", "collections"),
        ("omegaconf.errors", "typing"),
        ("attr", "__future__"),
        ("attr", "sys"),
        ("attr", "functools"),
        ("attr", "attr.converters"),
        ("attr", "attr.exceptions"),
        ("attr", "attr.filters"),
        ("attr", "attr.setters"),
        ("attr", "attr.validators"),
        ("attr", "attr._config"),
        ("attr", "attr._funcs"),
        ("attr", "attr._make"),
        ("attr", "attr._version_info"),
        ("attr", "attr._next_gen"),
        ("attr.converters", "__future__"),
        ("attr.converters", "attr._make"),
        ("attr._make", "__future__"),
        ("attr._make", "copy"),
        ("attr._make", "linecache"),
        ("attr._make", "sys"),
        ("attr._make", "threading"),
        ("attr._make", "uuid"),
        ("attr._make", "warnings"),
        ("attr._make", "operator"),
        ("attr._make", "attr._config"),
        ("attr._make", "attr.setters"),
        ("attr._make", "attr._compat"),
        ("attr._make", "attr.exceptions"),
        ("attr._config", "__future__"),
        ("attr.setters", "__future__"),
        ("attr.setters", "attr._config"),
        ("attr.setters", "attr.exceptions"),
        ("attr.exceptions", "__future__"),
        ("attr._compat", "__future__"),
        ("attr._compat", "platform"),
        ("attr._compat", "sys"),
        ("attr._compat", "types"),
        ("attr._compat", "warnings"),
        ("attr._compat", "collections"),
        ("attr._compat", "collections.abc"),
        ("attr.filters", "__future__"),
        ("attr.filters", "attr._compat"),
        ("attr.filters", "attr._make"),
        ("attr.validators", "__future__"),
        ("attr.validators", "re"),
        ("attr.validators", "attr._make"),
        ("attr.validators", "attr.exceptions"),
        ("attr._funcs", "__future__"),
        ("attr._funcs", "copy"),
        ("attr._funcs", "attr._compat"),
        ("attr._funcs", "attr._make"),
        ("attr._funcs", "attr.exceptions"),
        ("attr._funcs", "warnings"),
        ("attr._funcs", "typing"),
        ("attr._version_info", "__future__"),
        ("attr._version_info", "functools"),
        ("attr._version_info", "attr._funcs"),
        ("attr._version_info", "attr._make"),
        ("attr._next_gen", "functools"),
        ("attr._next_gen", "attr.exceptions"),
        ("attr._next_gen", "attr.setters"),
        ("attr._next_gen", "attr._make"),
        ("omegaconf.omegaconf", "copy"),
        ("omegaconf.omegaconf", "io"),
        ("omegaconf.omegaconf", "os"),
        ("omegaconf.omegaconf", "pathlib"),
        ("omegaconf.omegaconf", "re"),
        ("omegaconf.omegaconf", "sys"),
        ("omegaconf.omegaconf", "warnings"),
        ("omegaconf.omegaconf", "collections"),
        ("omegaconf.omegaconf", "contextlib"),
        ("omegaconf.omegaconf", "enum"),
        ("omegaconf.omegaconf", "textwrap"),
        ("omegaconf.omegaconf", "typing"),
        ("omegaconf.omegaconf", "yaml"),
        ("omegaconf.omegaconf", "typing_extensions"),
        ("omegaconf.omegaconf", "omegaconf"),
        ("omegaconf.omegaconf", "omegaconf._utils"),
        ("omegaconf.omegaconf", "omegaconf.base"),
        ("omegaconf.omegaconf", "omegaconf.basecontainer"),
        ("omegaconf.omegaconf", "omegaconf.errors"),
        ("omegaconf.omegaconf", "omegaconf.nodes"),
        ("omegaconf.omegaconf", "omegaconf.dictconfig"),
        ("omegaconf.omegaconf", "omegaconf.listconfig"),
        ("typing_extensions", "abc"),
        ("typing_extensions", "collections"),
        ("typing_extensions", "contextlib"),
        ("typing_extensions", "sys"),
        ("typing_extensions", "typing"),
        ("typing_extensions", "collections.abc"),
        ("typing_extensions", "operator"),
        ("typing_extensions", "_collections_abc"),
        ("typing_extensions", "warnings"),
        ("_collections_abc", "abc"),
        ("_collections_abc", "sys"),
        ("omegaconf.basecontainer", "copy"),
        ("omegaconf.basecontainer", "sys"),
        ("omegaconf.basecontainer", "warnings"),
        ("omegaconf.basecontainer", "abc"),
        ("omegaconf.basecontainer", "enum"),
        ("omegaconf.basecontainer", "textwrap"),
        ("omegaconf.basecontainer", "typing"),
        ("omegaconf.basecontainer", "yaml"),
        ("omegaconf.basecontainer", "omegaconf._utils"),
        ("omegaconf.basecontainer", "omegaconf.base"),
        ("omegaconf.basecontainer", "omegaconf.errors"),
        ("omegaconf.basecontainer", "omegaconf"),
        ("omegaconf.basecontainer", "omegaconf.dictconfig"),
        ("omegaconf.basecontainer", "omegaconf.listconfig"),
        ("omegaconf.basecontainer", "omegaconf.omegaconf"),
        ("omegaconf.basecontainer", "omegaconf.nodes"),
        ("omegaconf.dictconfig", "copy"),
        ("omegaconf.dictconfig", "enum"),
        ("omegaconf.dictconfig", "typing"),
        ("omegaconf.dictconfig", "omegaconf._utils"),
        ("omegaconf.dictconfig", "omegaconf.base"),
        ("omegaconf.dictconfig", "omegaconf.basecontainer"),
        ("omegaconf.dictconfig", "omegaconf.errors"),
        ("omegaconf.dictconfig", "omegaconf.nodes"),
        ("omegaconf.dictconfig", "omegaconf.omegaconf"),
        ("omegaconf.dictconfig", "omegaconf"),
        ("omegaconf.nodes", "copy"),
        ("omegaconf.nodes", "math"),
        ("omegaconf.nodes", "sys"),
        ("omegaconf.nodes", "enum"),
        ("omegaconf.nodes", "typing"),
        ("omegaconf.nodes", "omegaconf._utils"),
        ("omegaconf.nodes", "omegaconf.base"),
        ("omegaconf.nodes", "omegaconf.errors"),
        ("omegaconf.nodes", "omegaconf"),
        ("omegaconf.listconfig", "copy"),
        ("omegaconf.listconfig", "itertools"),
        ("omegaconf.listconfig", "typing"),
        ("omegaconf.listconfig", "omegaconf._utils"),
        ("omegaconf.listconfig", "omegaconf.base"),
        ("omegaconf.listconfig", "omegaconf.basecontainer"),
        ("omegaconf.listconfig", "omegaconf.errors"),
        ("omegaconf.listconfig", "omegaconf"),
        ("omegaconf.listconfig", "omegaconf.omegaconf"),
        ("omegaconf.version", "sys"),
        ("caffe2.torch.fb.hpc.config_utils", "enum"),
        ("caffe2.torch.fb.hpc.config_utils", "typing"),
        ("caffe2.torch.fb.hpc.config_utils", "omegaconf"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.grouped_sharded_embedding_bag"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.shard_utils"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding"),
        ("caffe2.torch.fb.training_toolkit.backend.modules", "caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding_bag"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "uuid"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "collections"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "threading"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.checkpoint.type_def"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "torch.nn"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "torch._jit_internal"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "torch.distributed.rpc"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.modules.shard_utils"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "collections"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "abc"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "torch.nn"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.remote_parameters", "torch.distributed.rpc"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.shard_utils", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.shard_utils", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding_bag", "typing"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding_bag", "torch"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.modules.async_sharded_embedding_bag"),
        ("caffe2.torch.fb.training_toolkit.backend.modules.sharded_embedding_bag", "caffe2.torch.fb.training_toolkit.backend.modules.shard_utils"),
        ("caffe2.torch.fb.training_toolkit.common.sharding.feature_meta_extractor", "logging"),
        ("caffe2.torch.fb.training_toolkit.common.sharding.feature_meta_extractor", "typing"),
        ("caffe2.torch.fb.training_toolkit.common.sharding.feature_meta_extractor", "caffe2.dper.feature_proc.ttypes"),
        ("caffe2.torch.fb.training_toolkit.common.sharding.feature_meta_extractor", "caffe2.torch.fb.training_toolkit.common.model_saving_utils"),
        ("caffe2.dper.feature_proc.ttypes", "__future__"),
        ("caffe2.dper.feature_proc.ttypes", "six"),
        ("caffe2.dper.feature_proc.ttypes", "sys"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.util.Recursive"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.Thrift"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.protocol.TProtocol"),
        ("caffe2.dper.feature_proc.ttypes", "json"),
        ("caffe2.dper.feature_proc.ttypes", "pprint"),
        ("caffe2.dper.feature_proc.ttypes", "warnings"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.transport.TTransport"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.protocol.TBinaryProtocol"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.protocol.TCompactProtocol"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.protocol.THeaderProtocol"),
        ("caffe2.dper.feature_proc.ttypes", "thrift.protocol.fastproto"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "io"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "logging"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "typing"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "caffe2.dper.feature_proc.ttypes"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "thrift.py3.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "torch"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "aiplatform.config_store.client_if.structure.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "aiplatform.config_store.config_store_client"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "caffe2.torch.fb.training_toolkit.common.interfaces.common.pytorch_model.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "caffe2.torch.fb.training_toolkit.common.interfaces.data_reading_config.data_reading_config.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "caffe2.torch.fb.training_toolkit.common.interfaces.distributed_app_config.distributed_app_config.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "caffe2.torch.fb.training_toolkit.common.interfaces.model_config.model_config.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "libfb.py.thriftstructserializer"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "ml_data.config.data_reading_config.types"),
        ("caffe2.torch.fb.training_toolkit.common.model_saving_utils", "thrift.py3"),
    ]

    visualize_dependencies(deps, "/tmp/graph.html"),
